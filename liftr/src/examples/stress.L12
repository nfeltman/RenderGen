let fpc = 
	fn f : ((int -> int) -> int -> int) =>
	let r =
		fn (y,n) : ((mu (0 * int->int)) * int) =>
		f (fn v : int => unroll y (y,v)) n
	in
	fn v : int => r (roll (0*int->int) r, v)
	
in fpc (fn f : int->int => fn x : int => if x <=1 then 1 else (f (x-1))*x) 5