add recursive type rules to everything

figure 3 (valid values) is out of date

avoid words "promises" and "future", which have a specific meaning in PL

incomplete rule in figure 9 (sum and function splitting)

rename "hatted variables"

can we call this an "explicit substitution"?

should we position \lambda12 as a core calculus and (the implementation) as the
implementation, cf the current treatment of \lambda12 as "the language"?

be careful about appeals to "cost", if we don't have a cost model

Spark citation?

in which language is the output of reification?

define L2 and its evaluation \downarrow_\bbtwo

KF: should the Figure 1 grammar have braces?

NF: call prev and next "blocks"

================================================

Resolved:

some inconsistency about q vs v in figure 6?
 - NF : I don't see a problem
